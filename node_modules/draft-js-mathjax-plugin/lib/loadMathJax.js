'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var loadScript = require('load-script');

// mathjax cdn shutdown the 30/04/2017!!! https://cdn.mathjax.org/mathjax/latest/MathJax.js
var DEFAULT_SCRIPT = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js';

var DEFAULT_OPTIONS = {
  extensions: ['tex2jax.js'],
  jax: ['input/TeX', 'output/CommonHTML'],
  TeX: {
    extensions: ['AMSmath.js', 'AMSsymbols.js']
  },
  messageStyles: 'none',
  showProcessingMessages: false,
  showMathMenu: false,
  showMathMenuMSIE: false,
  preview: 'none',
  tex2jax: {
    // inlineMath: [],
    preview: 'none',
    processEnvironments: false
  },
  delayStartupTypeset: true
};

var DEFAULT_CONFIG = {
  script: DEFAULT_SCRIPT,
  options: DEFAULT_OPTIONS
};

var loadMathJax = function loadMathJax(_ref) {
  var macros = _ref.macros;

  var config = DEFAULT_CONFIG;

  if (macros) {
    var TeX = DEFAULT_OPTIONS.TeX;
    TeX = _extends({}, TeX, {
      Macros: _extends({}, TeX.Macros, macros)
    });
    config = _extends({}, config, {
      options: _extends({}, config.options, {
        TeX: TeX
      })
    });
  }

  if (window.MathJax) {
    window.MathJax.Hub.Config(config.options);
    window.MathJax.Hub.processSectionDelay = 0;
    return;
  }
  loadScript(config.script, function () {
    window.MathJax.Hub.Config(config.options);
    // avoid flickering of the preview
    window.MathJax.Hub.processSectionDelay = 0;
  });
};

exports.default = loadMathJax;